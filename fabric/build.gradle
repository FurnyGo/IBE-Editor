plugins {
    id "com.github.johnrengelman.shadow" version "7.0.0"
    id "me.shedaniel.unified-publishing"
}

repositories {
    maven {
        name = "TerraformersMC"
        url = "https://maven.terraformersmc.com/releases/"
    }
}

architectury {
    platformSetupLoomIde()
    fabric()
}

loom {
    accessWidenerPath = file("src/main/resources/ibeeditor.accesswidener")
}

configurations {
    common
    shadowCommon // Don't use shadow from the shadow plugin because we don't want IDEA to index this.
    compileClasspath.extendsFrom common
    runtimeClasspath.extendsFrom common
    developmentFabric.extendsFrom common
}

dependencies {
    modImplementation "net.fabricmc:fabric-loader:${rootProject.fabric_loader_version}"
    modApi "net.fabricmc.fabric-api:fabric-api:${rootProject.fabric_api_version}"
    modImplementation "com.terraformersmc:modmenu:${rootProject.modmenu_version}"

    common(project(path: ":common", configuration: "namedElements")) { transitive false }
    shadowCommon(project(path: ":common", configuration: "transformProductionFabric")) { transitive false }
}

processResources {
    inputs.property "version", project.version

    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
}

shadowJar {
    configurations = [project.configurations.shadowCommon]
    archiveClassifier = "dev-shadow"
}

remapJar {
    input.set shadowJar.archiveFile
    dependsOn shadowJar
    archiveClassifier = "fabric"
}

jar {
    archiveClassifier = "dev"
}

sourcesJar {
    def commonSources = project(":common").sourcesJar
    dependsOn commonSources
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    from commonSources.archiveFile.map { zipTree(it) }
}

components.java {
    withVariantsFromConfiguration(project.configurations.shadowRuntimeElements) {
        skip()
    }
}

publishing {
    publications {
        mavenFabric(MavenPublication) {
            artifactId = rootProject.archives_base_name + "-" + project.name
            from components.java
        }
    }

    // See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
    repositories {
        // Add repositories to publish to here.
    }
}

unifiedPublishing {
    project {
        displayName = "IBE Editor v${rootProject.version} for Fabric ${rootProject.minecraft_version}"
        releaseType = versionInfoType
        changelog = versionInfoChangelog
        compatibleGameVersions.each { gameVersions.add it }
        gameLoaders = ["fabric"]
        mainPublication tasks.remapJar
        relations {
            depends {
                curseforge = "fabric-api"
                modrinth = "fabric-api"
            }
        }

        var CURSE_API_KEY = project.findProperty("curseforge_token") ?: System.getenv("CURSEFORGE_TOKEN")
        if (CURSE_API_KEY != null) {
            curseforge {
                token = CURSE_API_KEY
                id = curseforgeProjectId
                gameVersions.add "Java ${rootProject.java_version}"
            }
        }

        var MODRINTH_TOKEN = project.findProperty("modrinth_token") ?: System.getenv("MODRINTH_TOKEN")
        if (MODRINTH_TOKEN != null) {
            modrinth {
                token = MODRINTH_TOKEN
                id = modrinthProjectId
                version = "${rootProject.version}+${rootProject.major_minecraft_version}-fabric"
            }
        }
    }
}
